/*--------------- 1ra Area: Codigo de Usuario -----------------------*/
//-------> importaciones, paquetes

package backend.analizadorParaTextoDeCliente;
import java_cup.runtime.*;
import backend.elementos.*;
import backend.excepciones.*;
import frontend.gui.*;
//import java.util.Date;
//import java.util.ArrayList;
//import javax.swing.tree.DefaultMutableTreeNode;
//import backend.manejoDeDatos.*;

parser code {:


    int fila,columna;
    String lexema;
    //  VARIABLES
    private String valor;
    private SitioWeb sitioWeb;
    private PaginaWeb paginaWeb;
    private Usuario usuario;
    private ClienteFrame clienteFrame;

    // Connect this parser to a scanner!
    public parser(AnalizadorLexicoTextoCliente lex,Usuario usuario,ClienteFrame clienteFrame) {
	super(lex);
        this.usuario=usuario;
        this.clienteFrame=clienteFrame;
    }

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s){        
        try {
        this.lexema =s.value.toString();
        String lexema = s.value.toString();
        int fila = s.left;
        int columna = s.right;
        this.clienteFrame.mostrarError("sintactico",fila,columna,lexema);
        this.clienteFrame.setSeDebeEnviarElTexto(false);
        } catch (Exception e) {
            //System.out.println("Error Recuperable se esperaba mas simbolos en ultima fila");
            this.clienteFrame.setSeDebeEnviarElTexto(false);
        } 
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{        
        try {
            String lexema = s.value.toString();
            int fila = s.left;
            int columna = s.right;
            this.clienteFrame.mostrarErrorSintactico("NO HAS CONTROLADO ESTE ERROR");
            this.clienteFrame.setSeDebeEnviarElTexto(false);
        } catch (Exception e) {
            //System.out.println("ERROR EN LA ESTRUCUTURA PRINCIPAL acciones");
            this.clienteFrame.mostrarErrorSintactico("Error SINTACTICO en la estructura acciones");
            this.clienteFrame.setSeDebeEnviarElTexto(false);
        }
    }

    private void iniciarSitioWeb(Object i,String tipo,int ileft,int iright){
        if(sitioWeb==null){
            System.out.println("el sitio ES NULO se iniciara uno nuevo");
            sitioWeb=new SitioWeb();
        }else{
            System.out.println("el sitio NO ES NULO se seguira almacenando");
        }   

        if(i!=null){
            String valor=i.toString();
            System.out.println("VALOR:"+valor+"TIPO:"+tipo);
            if(sitioWeb.darValores(valor,tipo)){
                System.out.println("Se asigno");
            }else{
                System.out.println("No asigno");
                clienteFrame.mostrarError("sintactico repetitivo",ileft,iright,i.toString());
                this.clienteFrame.setSeDebeEnviarElTexto(false);
            }
        }else{
            System.out.println("I es nulo");
        }   
    }


    private void iniciarPaginaWeb(Object i,String tipo,int ileft,int iright){
        if(paginaWeb==null){
            System.out.println("la pagina ES NULO se iniciara uno nuevo");
            paginaWeb=new PaginaWeb();
        }else{
            System.out.println("la pagina NO ES NULO se seguira almacenando");
        }   

        if(i!=null){
            String valor=i.toString();
            System.out.println("VALOR:"+valor+"TIPO:"+tipo);
            if(paginaWeb.darValores(valor,tipo)){
                System.out.println("Se asigno");
            }else{
                System.out.println("No asigno");
                clienteFrame.mostrarError("sintactico repetitivo",ileft,iright,i.toString());
                this.clienteFrame.setSeDebeEnviarElTexto(false);
            }
        }else{
            System.out.println("I es nulo");
        }   
    }

:}

/*--------------- 2da Area: Declaraciones -----------------------*/

terminal String         ACCION,ACCIONES,PARAMETROS,PARAMETRO,ATRIBUTOS,ATRIBUTO,NOMBRE,ETIQUETAS,ETIQUETA,VALOR,
                        DIAGONAL,MENOR_QUE,MAYOR_QUE,CORCHETE_ABIERTO,CORCHETE_CERRADO,IGUAL,COMILLA,DIAGONAL_RECTA,
                        NUEVO_SITIO_WEB,ID,USUARIO_CREACION,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION,
                        BORRAR_SITIO_WEB,NUEVA_PAGINA,TITULO,SITIO,PADRE,BORRAR_PAGINA,MODIFICAR_PAGINA,
                        AGREGAR_COMPONENTE,PAGINA,CLASE,BORRAR_COMPONENTE,MODIFICAR_COMPONENTE,
                        PARRAFO,IMAGEN,VIDEO,MENU,TEXTO,ALINEACION,CENTRAR,IZQUIERDA,DERECHA,JUSTIFICAR,
                        COLOR,ORIGEN,ALTURA,ANCHO,HTTPS,
                        NUMERO,FORMATO_FECHA,IDENTIFICADOR,URL;

non terminal Object     inicio,acciones,unaAccion,conjuntoDeAcciones,cabecera,cuerpo,etiquetas,atributos,
                        conjuntoDeParametros,unParametro,conjuntoDeEtiquetas,unaEtiqueta,
                        conjuntoDeAtributos, unAtributo,fin;
/*--------------- 3ra Area: Reglas Semanticas -----------------------*/


start with inicio;

inicio::= unaAccion|acciones|error;

acciones::= MENOR_QUE ACCIONES MAYOR_QUE conjuntoDeAcciones MENOR_QUE DIAGONAL ACCIONES MAYOR_QUE;

conjuntoDeAcciones::= conjuntoDeAcciones unaAccion | unaAccion;

unaAccion::=cabecera cuerpo fin|
            cabecera cuerpo etiquetas fin|
            cabecera cuerpo atributos fin;

fin::= MENOR_QUE DIAGONAL ACCION MAYOR_QUE;

cabecera ::= MENOR_QUE ACCION NOMBRE IGUAL NUEVA_PAGINA;

cuerpo ::= MENOR_QUE PARAMETROS MAYOR_QUE conjuntoDeParametros MENOR_QUE PARAMETROS MAYOR_QUE;

conjuntoDeParametros::= conjuntoDeParametros unParametro | unParametro;

unParametro::= MENOR_QUE PARAMETRO NOMBRE IGUAL COMILLA ID COMILLA CORCHETE_ABIERTO IDENTIFICADOR CORCHETE_CERRADO MENOR_QUE DIAGONAL PARAMETRO MAYOR_QUE;

etiquetas::= MENOR_QUE ETIQUETAS MAYOR_QUE conjuntoDeEtiquetas MENOR_QUE DIAGONAL ETIQUETAS MAYOR_QUE;

conjuntoDeEtiquetas::= conjuntoDeEtiquetas unaEtiqueta|unaEtiqueta;

unaEtiqueta ::= MENOR_QUE ETIQUETA VALOR IGUAL COMILLA ID COMILLA DIAGONAL MAYOR_QUE;

atributos::= MENOR_QUE ATRIBUTOS MAYOR_QUE conjuntoDeAtributos MENOR_QUE DIAGONAL ATRIBUTOS MAYOR_QUE;

conjuntoDeAtributos::= conjuntoDeAtributos unAtributo | unAtributo;

unAtributo::= MENOR_QUE ATRIBUTO  NOMBRE IGUAL COMILLA TEXTO COMILLA MAYOR_QUE CORCHETE_ABIERTO IDENTIFICADOR CORCHETE_CERRADO MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE;