/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend.gui;

import backend.analizadorParaLogin.AnalizadorLexicoUsuarios;
import backend.analizadorParaLogin.parser;
import backend.elementos.Usuario;
import backend.manejadoresDeArchivosDeTexto.EscritorDeDatos;
import backend.manejadoresDeArchivosDeTexto.LectorDeDatos;
import java.io.BufferedReader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author jesfrin
 */
public class LogInFrame extends javax.swing.JFrame {

    private ArrayList<Usuario> listaDeUsuarios;
    private Usuario usuario;

    /**
     * Creates new form logInFrame
     */
    public LogInFrame() {
        initComponents();
        setLocationRelativeTo(null);
        this.listaDeUsuarios = new ArrayList<>();
        usuario = new Usuario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        iniciarCesionButton = new javax.swing.JButton();
        idTextField = new javax.swing.JTextField();
        registrarseButton = new javax.swing.JButton();
        passwordPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID:");

        jLabel2.setText("Password:");

        jLabel3.setText("LOG IN");

        iniciarCesionButton.setText("Iniciar cesion");
        iniciarCesionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarCesionButtonActionPerformed(evt);
            }
        });

        idTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idTextFieldKeyTyped(evt);
            }
        });

        registrarseButton.setText("Registrarse");
        registrarseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(219, 219, 219))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(iniciarCesionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(registrarseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(107, 107, 107))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(passwordPasswordField1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel3)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(iniciarCesionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registrarseButton)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarCesionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarCesionButtonActionPerformed
        String id = this.idTextField.getText();
        String password = this.passwordPasswordField1.getText();
        if (id.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Faltan campos por llenar");
        } else {
            if (verificarSiSePuedeIniciarLaAplicacionGeneral(id, password)) {
                JOptionPane.showMessageDialog(this, "Usuario encontrado" + this.usuario.getNombre());
                this.dispose();
                ClienteFrame nuevoFrame = new ClienteFrame(usuario);
                nuevoFrame.setVisible(true);
                //Llamar app general
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro el usuario");
            }

        }
    }//GEN-LAST:event_iniciarCesionButtonActionPerformed

    private void registrarseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarseButtonActionPerformed
        String id = this.idTextField.getText();
        String password = this.passwordPasswordField1.getText();
        if (id.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Faltan compos por llenar");
        } else {
            if (id.startsWith("-") || id.startsWith("_") || id.startsWith("$")) {
                analizarTextoUsuarios();
                if (buscarSiExisteUsuarioConId(id)) {
                    JOptionPane.showMessageDialog(this, "Ya existe el usuario conel ID especificado pueba con otro :)");
                    this.idTextField.setText("");
                    this.passwordPasswordField1.setText("");
                } else {
                    //Escribir el usuario
                    password = "[" + password + "]";
                    String nuevoUsuario
                            = "<Usuario>\n"
                            + "<Nombre>" + id + "</Nombre>\n"
                            + "<Password>" + password + "</Password>\n"
                            + "</Usuario>\n";
                    EscritorDeDatos.escribirDatos(nuevoUsuario);
                    JOptionPane.showMessageDialog(this, "Usuario creado y registrado");
                    this.usuario = new Usuario(id, password);
                    this.dispose();
                    ClienteFrame nuevoFrame = new ClienteFrame(usuario);
                    nuevoFrame.setVisible(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "El id debe comenzar con alguno de los siguientes simbolos: - _ $");
                this.idTextField.setText("");
                this.passwordPasswordField1.setText("");
            }

        }
    }//GEN-LAST:event_registrarseButtonActionPerformed

    private void idTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextFieldKeyTyped
        if (evt.getKeyChar() == ' ') {
            evt.consume();
        }
    }//GEN-LAST:event_idTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogInFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogInFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogInFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogInFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogInFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idTextField;
    private javax.swing.JButton iniciarCesionButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField passwordPasswordField1;
    private javax.swing.JButton registrarseButton;
    // End of variables declaration//GEN-END:variables

    public ArrayList<Usuario> getListaDeUsuarios() {
        return listaDeUsuarios;
    }

    public void setListaDeUsuarios(ArrayList<Usuario> listaDeUsuarios) {
        this.listaDeUsuarios = listaDeUsuarios;
    }

    private void analizarTextoUsuarios() {//Llena la lista de usuarios segun analisis lexico y sintactico
        String instruccion = LectorDeDatos.leerDatos();
        AnalizadorLexicoUsuarios lexico = new AnalizadorLexicoUsuarios(new BufferedReader(new StringReader(instruccion)));
        parser sintactico = new parser(lexico, listaDeUsuarios);
        try {
            sintactico.parse();
        } catch (Exception ex) {
            // Logger.getLogger(Run.class.getName()).log(Level.SEVERE, null, ex);
            //System.out.println("OCURRIO UN ERROR EN EL SINTACTICO");
        }
    }

    private boolean buscarUsuarioEspecifico(String id, String password) {
        for (Usuario usr : listaDeUsuarios) {
            if (usr.getNombre().equals(id) && usr.getPassword().equals(password)) {
                this.usuario = usr;
                return true;
            }
        }

        return false;
    }

    private boolean buscarSiExisteUsuarioConId(String id) {
        for (Usuario usr : listaDeUsuarios) {
            if (usr.getNombre().equals(id)) {
                return true;
            }
        }
        return false;
    }

    private boolean verificarSiSePuedeIniciarLaAplicacionGeneral(String id, String password) {
        analizarTextoUsuarios();
        //Se recompone la contrasena
        password = "[" + password + "]";
        //Se busca el usuario
        if (buscarUsuarioEspecifico(id, password)) {
            return true;
        } else {
            return false;
        }
    }

}
